#------------------------------------------------------------------------------
# SPEC CPU(R) 2017 config file for: Visual Studio on Windows 
#------------------------------------------------------------------------------
#
# Usage: (1) Copy this to a new name
#             cd   %SPEC%\config
#             copy Example-x.cfg myname.cfg
#        (2) Change items that are marked 'EDIT' (search for it)
# 
# SPEC tested this config file with:
#    Compiler version(s):    Microsoft Visual Studio 2015, Update 3
#                            Microsoft Visual Studio 2017 
#                            Microsoft Visual Studio 2019
#    Operating system(s):    Windows 10 Professional (64-bit)
#    Hardware:               Dell Precision Tower 5810, Intel Xeon E5-2650 v3
#                            Intel Core i7-8700K
#
# If your system differs, this config file might not work.
# You might find a better config file at http://www.spec.org/cpu2017/results
#
#  -----------------------------
#  Known Limitations (IMPORTANT)
#  -----------------------------
#            * A 'reportable' run is not possible with Visual Studio 
#              unless you add a Fortran compiler.   
#            * Some benchmarks are not expected to work with certain 
#              compiler versions.  Search for 'skip' to find details.
#
#   ----    This config file expects 'bits' to be either 32 or 64, 
#   bits    according to your compiler "Output Architecture".  
#   ----    Examples:
#                -------------------    ------------------------
#                If you use             Then also use
#                -------------------    ------------------------
#                vcvarsall.bat x86      runcpu --define bits=32
#                vcvarsall.bat amd64    runcpu --define bits=64
#                -------------------    ------------------------
#            See Microsoft topic "Setting the Path and Environment Variables
#            for Command-Line Builds" for your version of Visual Studio
#
# Compiler issues: Contact your compiler vendor, not SPEC.
# For SPEC help:   http://www.spec.org/cpu2017/Docs/techsupport.html
#------------------------------------------------------------------------------


#--------- Label --------------------------------------------------------------
# Arbitrary string to tag binaries (no spaces allowed)
#                  Two Suggestions: # (1) EDIT this label as you try new ideas.
%define label "mytest"              # (2)      Use a label meaningful to *you*.


#--------- Preprocessor -------------------------------------------------------
%ifndef %{bits}                # EDIT to match your build type, or set on the
%   define  bits        64     #      runcpu command line.  See topic 'bits'
%endif                         #      above.

%ifndef %{VSVERSION}           # EDIT to match your version, or set on the 
%   define  VSVERSION   2015   #      the runcpu command line.  Use a four
%endif                         #      digit number please, such as 2015 or 2017

# Don't change this part.
%if %{bits} == 64
%   define model        x64   
%elif %{bits} == 32
%   define model        x86
%else
%   error Please define number of bits - see instructions in config file
%endif
%if %{VSVERSION} < 2015 
%   warning This config file was not tested with Visual Studio versions earlier than 2015
%endif
%if %{label} =~ m/ /
%   error Your label "%{label}" contains spaces.  Please try underscores instead.
%endif
%if %{label} !~ m/^[a-zA-Z0-9._-]+$/
%   error Illegal character in label "%{label}".  Please use only alphanumerics, underscore, hyphen, and period.
%endif

#--------- Global Settings ----------------------------------------------------
# For info, see:
#            https://www.spec.org/cpu2017/Docs/config.html#fieldname  
#   Example: https://www.spec.org/cpu2017/Docs/config.html#tune        

flagsurl             = $[top]/config/flags/MS-VisualStudio.xml
ignore_errors        = 1
iterations           = 1
label                = %{label}-VS%{VSVERSION}-%{model}
mean_anyway          = 1
output_format        = txt,html,cfg,pdf,csv
reportable           = 0
tune                 = base


#--------- How Many CPUs? -----------------------------------------------------
# Both SPECrate and SPECspeed can test multiple chips / cores / hw threads
#    - For SPECrate,  you set the number of copies.
#    - For SPECspeed, you set the number of threads. 
# See: https://www.spec.org/cpu2017/Docs/system-requirements.html#MultipleCPUs
#
#    q. How many should I set?  
#    a. Unknown, you will have to try it and see!
#
# To get you started, some suggestions:
#
#     copies - This config file defaults to testing only 1 copy.   You might
#              try changing it to match the number of cores on your system, 
#              or perhaps the  NumberOfLogicalProcessors as reported by
#                     wmic cpu get /value
#              Be sure you have enough memory.  See:
#              https://www.spec.org/cpu2017/Docs/system-requirements.html#memory
#
#     threads - This config file sets a starting point.  You could try raising 
#               it.  A higher thread count is much more likely to be useful for
#               fpspeed than for intspeed.
#
intrate,fprate:
   copies           = 1   # EDIT to change number of copies (see above)
intspeed,fpspeed:
   threads          = 4   # EDIT to change number of OpenMP threads (see above)


#------- Compilers ------------------------------------------------------------
default:
   CC                 = cl /TC
   CLD                = cl
   CXX                = cl /TP
   CXXLD              = cl
   OBJ                = .obj
   # How to say "Show me your version, please"  
   CC_VERSION_OPTION   =  "/w"   # There is no specific option for cl to get
   CXX_VERSION_OPTION  =  "/w"   # to get compiler version. Use any valid option.

default:
%if %{bits} == 64
   sw_base_ptrsize = 64-bit
   sw_peak_ptrsize = Not Applicable
%else
   sw_base_ptrsize = 32-bit
   sw_peak_ptrsize = Not Applicable
%endif


#------- Benchmarks to skip --------------------------------------------------
# This section excludes benchmarks that are not expected work with this config 
# file.
#
# FORTRAN   Skip these if your only compiler is Visual Studio C/C++, because
#           they use Fortran (at least in part).  If you have a Fortran
#           compiler, you could remove this section; and you would need to add
#           Fortran-related flags, such as 'FC'; see 
#                http://www.spec.org/cpu2017/Docs/config.html#makeCompiler
#
503.bwaves_r,603.bwaves_s,507.cactuBSSN_r,607.cactuBSSN_s,521.wrf_r,621.wrf_s,527.cam4_r,627.cam4_s:
   fail_build=1
628.pop2_s,548.exchange2_r,648.exchange2_s,549.fotonik3d_r,649.fotonik3d_s,554.roms_r,654.roms_s:
   fail_build=1


#--------- Portability --------------------------------------------------------
default:               # data model applies to all benchmarks
%if %{bits} == 64
   PORTABILITY = /DSPEC_P64   # data model must be consistent for all of base
%endif

# Benchmark-specific portability (ordered by last 2 digits of bmark number)

500.perlbench_r,600.perlbench_s:
%if %{bits} == 32
   CPORTABILITY      = -DSPEC_WIN32 -DHAS_QUAD
%else
   CPORTABILITY      = -DSPEC_WIN64 
%endif

502.gcc_r,602.gcc_s=default:  # When using Visual Studio 2015, skip these.
%if %{VSVERSION} == 2015      # If you remove the 'fail_build', you may see 
   fail_build=1               # Internal Compiler errors.
%endif

510.parest_r:         # skip: does not build tested versions of Visual Studio
   fail_build=1       #    Visual Studio 2015 - Internal Compiler error
                      #    Visual Studio 2017 and 2019 - Compile error
   # If you try it (perhaps with a later compiler version), these flags may help.
   # but for now they are, by default, commented out. 
   #   CXXPORTABILITY = /DDEAL_II_MEMBER_ARRAY_SPECIALIZATION_BUG /DDEAL_II_MEMBER_VAR_SPECIALIZATION_BUG

523.xalancbmk_r,623.xalancbmk_s:
   CXXPORTABILITY = -Zc:wchar_t-

525.x264_r,625.x264_s:
   CPORTABILITY   = -DSPEC_WINDOWS_MSVS2013 # This flag is needed for 2013 and for later versions too

526.blender_r:
   PORTABILITY_LIBS = shell32.lib advapi32.lib user32.lib
   NEEDATFILE       = 1

541.leela_r,641.leela_s:
   CXXPORTABILITY = -DBOOST_HAS_TR1_ARRAY

557.xz_r,657.xz_s:
   CPORTABILITY   = -DSPEC_NO_SSIZE_T -Drestrict=__restrict


#-------- Tuning Flags common to Base and Peak --------------------------------

#
# Speed (OpenMP and Autopar allowed)
#
%if %{bits} == 32
   intspeed,fpspeed:
       #
       # Many of the speed benchmarks (6nn.benchmark_s) do not fit in 32 bits
       # If you wish to run SPECint2017_speed or SPECfp2017_speed, please use
       #
       #     runcpu --define bits=64
       #
       fail_build = 1
%else
   intspeed,fpspeed:
       EXTRA_OPTIMIZE = /Qpar /DSPEC_OPENMP /openmp
%endif
#--------  Baseline Tuning Flags ----------------------------------------------
default=base:
    CXXOPTIMIZE        = /EHsc
%   if %{bits} == 32 
        OPTIMIZE       = /Zi /O2 /arch:AVX2
%   else
        OPTIMIZE       = /Zi /O2 /arch:AVX2 /favor:INTEL64
%   endif

intrate,intspeed=base:           # 502.gcc_r/602.gcc_s need a large stack.  For
   EXTRA_LDFLAGS  = /F1500000    # base, set it for all benchmarks, as required.
                                 # http://www.spec.org/cpu2017/runrules.html#BaseFlags


#--------  Peak Tuning Flags ----------------------------------------------
default:           # If you develop some peak tuning, remove these two lines
   basepeak = yes  # and put your tuning in the default=peak: section below.
default=peak:

#------------------------------------------------------------------------------
# Tester and System Descriptions - EDIT all sections below this point              
#------------------------------------------------------------------------------
#   For info about any field, see
#             https://www.spec.org/cpu2017/Docs/config.html#fieldname 
#   Example:  https://www.spec.org/cpu2017/Docs/config.html#hw_memory  
#------------------------------------------------------------------------------

#--------- EDIT to match your version -----------------------------------------
default:
   sw_compiler001   = C/C++: Version 19.21.27702.2 of Microsoft 
   sw_compiler002   = Visual Studio 2019

#--------- EDIT info about you ------------------------------------------------
# To understand the difference between hw_vendor/sponsor/tester, see:
#     https://www.spec.org/cpu2017/Docs/config.html#test_sponsor
intrate,intspeed,fprate,fpspeed: # Important: keep this line
   hw_vendor          = My Corporation
   tester             = My Corporation
   test_sponsor       = My Corporation
   license_num        = nnn (Your SPEC license number) 
#  prepared_by        = # Ima Pseudonym                       # Whatever you like: is never output


#--------- EDIT system availability dates -------------------------------------
intrate,intspeed,fprate,fpspeed: # Important: keep this line
                        # Example                             # Brief info about field
   hw_avail           = # Nov-2099                            # Date of LAST hardware component to ship
   sw_avail           = # Nov-2099                            # Date of LAST software component to ship

#--------- EDIT system information --------------------------------------------
intrate,intspeed,fprate,fpspeed: # Important: keep this line
                        # Example                             # Brief info about field
#  hw_cpu_name        = # Intel Xeon E9-9999 v9               # chip name
   hw_cpu_nominal_mhz = # 9999                                # Nominal chip frequency, in MHz
   hw_cpu_max_mhz     = # 9999                                # Max chip frequency, in MHz
   hw_disk            = # 9 x 9 TB SATA III 9999 RPM          # Size, type, other perf-relevant info
#  hw_model           = # TurboBlaster 3000                   # system model name
#  hw_nchips          = # 99                                  # number chips enabled
#  hw_ncores          = # 9999                                # number cores enabled
   hw_ncpuorder       = # 1-9 chips                           # Ordering options  
#  hw_nthreadspercore = # 9                                   # number threads enabled per core
   hw_other           = # TurboNUMA Router 10 Gb              # Other perf-relevant hw, or "None"

   hw_memory001       = # 4 TB (256 x 16 GB 2Rx4 PC4-2133P-R, # N GB (M x N GB nRxn 
   hw_memory002       = # running at 1600 MHz)                # PCn-nnnnnR-n[, ECC and other info])
                     
   hw_pcache          = # 99 KB I + 99 KB D on chip per core  # Primary cache size, type, location  
   hw_scache          = # 99 KB I+D on chip per 9 cores       # Second cache or "None" 
   hw_tcache          = # 9 MB I+D on chip per chip           # Third  cache or "None" 
   hw_ocache          = # 9 GB I+D off chip per system board  # Other cache or "None" 

   fw_bios            = # Mumble 999090 02/29/2099            # Firmware information
   sw_file            = # NTFS                                # File system  
#  sw_os001           = # Windows 99.9 Sailboat               # Operating system
#  sw_os002           = # Edition (64-bit) SP1                # 
   sw_other           = # TurboHeap Library V8.1              # Other perf-relevant sw, or "None"
   sw_state           = # Safe Mode, Virus scanner disabled   # Software state.  If no changes, "Default"

# Note: Some commented-out fields above are automatically set to preliminary 
# values by sysinfo
#       https://www.spec.org/cpu2017/Docs/config.html#sysinfo
# Uncomment lines for which you already know a better answer than sysinfo 
