#------------------------------------------------------------------------------
# SPEC CPU(R) 2017 config file for Intel compilers / Linux x86_64
#------------------------------------------------------------------------------
#
# Usage: (1) Copy this to a new name
#             cd $SPEC/config
#             cp Example-x.cfg myname.cfg
#        (2) Change items that are marked 'EDIT' (search for it)
#
# SPEC tested this config file with:
#   Compiler:  Intel(R) C/C++ and Fortran V17.0.4, 18.0 Update 2, 
#              V19.0.1.144, V19.0.4.243
#   OS:        Redhat Enterprise Linux 7.5, 
#              Oracle Linux 7.4,
#              Ubuntu 18.04.2 LTS
#   Hardware:  Intel(R) Core(TM) i9-7900x w/ 32GB RAM
# If you have different software or hardware, this config file may not work.
# You may find a better config file for your system next to posted results:
#     http://www.spec.org/cpu2017/results
#
# Compiler version notes: 
#   (1) Always use the most recent release if possible.  
#   (2) If you are using an older compiler, some systems may work better if
#       you remove the line
#            SSE = -xHOST

# Compiler issues: Contact your compiler vendor, not SPEC.
# For SPEC help:   http://www.spec.org/cpu2017/Docs/techsupport.html
#------------------------------------------------------------------------------


#--------- Label --------------------------------------------------------------
# Arbitrary string to tag binaries
#                  Two Suggestions: # (1) EDIT this label as you try new ideas.
label      =  myTest                # (2)      Use a label meaningful to *you*.


#--------- Preprocessor -------------------------------------------------------
%ifndef %{build_ncpus}         # EDIT to adjust number of simultaneous compiles.
%   define  build_ncpus 8      #      Or, you can set it on the command line:
%endif                         #      'runcpu --define build_ncpus=nn'


#--------- Global Settings ----------------------------------------------------
# For info, see:
#            https://www.spec.org/cpu2017/Docs/config.html#fieldname
#   Example: https://www.spec.org/cpu2017/Docs/config.html#tune

default:
   bench_post_setup     = sync
   command_add_redirect = 1
   flagsurl1            = $[top]/config/flags/Intel-ic18.0-official-linux64.xml
   iterations           = 1
   line_width           = 1020
   log_line_width       = 1020
   makeflags            = -j%{build_ncpus}
   mean_anyway          = 1
   output_format        = txt,html,cfg,pdf,csv
   preenv               = 1
   reportable           = 0  
   tune                 = base


#--------- Environment variables ---------------------------------------------
# EDIT (optional) If desired, you may be able to adjust the amount of stack 
#      space needed for the floating point speed benchmarks.  
#      For 32-bit builds, 128 MB may be enough.  See:
#      https://www.spec.org/cpu2017/Docs/faq.html#Miscompare.07
fpspeed:
   preENV_OMP_STACKSIZE = 192M

# EDIT If you are building and running the benchmarks on different
#      systems, you will need to point to the run time libraries.  See:
#      https://software.intel.com/en-us/articles/redistributable-libraries-for-intel-c-and-fortran-2019-compilers-for-linux
default:
   #preENV_LD_LIBRARY_PATH =

#--------- Compilers ----------------------------------------------------------
default:
   CC                      = icc -m64 -std=c11
   CXX                     = icpc -m64 
   FC                      = ifort -m64

default: # How to say "Show me your version, please"
   CC_VERSION_OPTION       = --version
   CXX_VERSION_OPTION      = --version
   FC_VERSION_OPTION       = --version

#--------- Portability --------------------------------------------------------

default:
   PORTABILITY    = -DSPEC_LP64

500.perlbench_r,600.perlbench_s:
   CPORTABILITY   = -DSPEC_LINUX_X64

521.wrf_r,621.wrf_s:
   CPORTABILITY   = -DSPEC_CASE_FLAG
   FPORTABILITY   = -convert big_endian

523.xalancbmk_r,623.xalancbmk_s:
   CXXPORTABILITY = -DSPEC_LINUX

526.blender_r:
   CPORTABILITY   = -DSPEC_LINUX -funsigned-char

527.cam4_r,627.cam4_s:
   CPORTABILITY   = -DSPEC_CASE_FLAG

628.pop2_s:
   CPORTABILITY   = -DSPEC_CASE_FLAG
   FPORTABILITY   = -convert big_endian -assume byterecl


#--------- How Many CPUs? -----------------------------------------------------
# Both SPECrate and SPECspeed can test multiple chips / cores / hw threads
#    - For SPECspeed, you set the number of threads.
#    - For SPECrate,  you set the number of copies.
# See: https://www.spec.org/cpu2017/Docs/system-requirements.html#MultipleCPUs
#    q. How many should I set?
#    a. Unknown, you will have to try it and see!  

# SPECspeed threads
#     This config file sets a modest starting point.  You could try raising it. 
#     More threads will probably help fpspeed much more than intspeed.
#
intspeed,fpspeed:
   threads          = 4   # EDIT to change number of OpenMP threads 
#
#     EDIT (optional): For SPECspeed, you may wish to set affinitization by 
#          removing the comment marks just below.  See:   
#          https://software.intel.com/en-us/cpp-compiler-developer-guide-and-reference-thread-affinity-interface-linux-and-windows
#%ifdef %{intspeedaffinity}
#   preENV_KMP_AFFINITY = granularity=fine,scatter
#%else
#   preENV_KMP_AFFINITY = granularity=fine,compact,1,0
#%endif

# SPECrate copies 
#     This config file sets a starting point of just 1 copy.  You could try
#     raising it to match the number of cores on your system, or perhaps the 
#     number of virtual CPUs as reported by:
#           grep -c processor /proc/cpuinfo
#     Be sure you have enough memory.  See:
#     https://www.spec.org/cpu2017/Docs/system-requirements.html#memory
#
intrate,fprate:
   copies           = 1   # EDIT to change number of copies (see above)
   submit           = taskset -c $SPECCOPYNUM $command
                          # EDIT (optional): the above line assigns one copy
                          # per virtual processor.  On multi-chip systems, you 
                          # may want to consider using numactl instead.

#-------- Tuning Flags -------------------------------------------------
default:
   SSE                    = -xHOST
   EXTRA_FOPTIMIZE        = -nostandard-realloc-lhs

default:
%if defined(%{noopt})
   OPT_ROOT               = -O0
%elif defined(%{medopt})
   OPT_ROOT               = -O2
%else
   OPT_ROOT               = -ipo -O3 -no-prec-div
%endif
   FAST_NO_STATIC         = $(SSE) $(OPT_ROOT)
   FORT_FAST_NO_STATIC    = $(SSE) $(OPT_ROOT)
   FAST                   = $(SSE) $(OPT_ROOT) -static
   FORT_FAST              = $(SSE) $(OPT_ROOT) -static

default:
   COPTIMIZE              = -g $(FAST_NO_STATIC) -qopt-mem-layout-trans=3 -qopt-prefetch
   CXXOPTIMIZE            = -g $(FAST_NO_STATIC) -qopt-mem-layout-trans=3 -qopt-prefetch
   FOPTIMIZE              = -g $(FORT_FAST_NO_STATIC) -qopt-mem-layout-trans=3 -qopt-prefetch

intspeed:  # for integer speed, one C benchmark uses OpenMP 
   EXTRA_COPTIMIZE        = -qopenmp -DSPEC_OPENMP

fpspeed:   # for floating point speed, all benchmarks use OpenMP
   EXTRA_OPTIMIZE         = -qopenmp -DSPEC_OPENMP

#--------  Peak Tuning Flags ----------------------------------------------
default:           # If you develop some peak tuning, remove these two lines
   basepeak = yes  # and put your tuning in the default=peak: section below.
default=peak:      # Check for peak in similar published results at http://www.spec.org/cpu2017/results


#-------------------------------------------------------------------------------
# Tester and System Descriptions - EDIT the sections below
#-------------------------------------------------------------------------------
#   For info about any field, see
#             https://www.spec.org/cpu2017/Docs/config.html#fieldname
#   Example:  https://www.spec.org/cpu2017/Docs/config.html#hw_memory
#-------------------------------------------------------------------------------

#--------- If you install new compilers, EDIT this section --------------------

intrate,intspeed,fpspeed,fprate:
   sw_compiler001   = C/C++: Version 18.0.2.199 of Intel C/C++
   sw_compiler002   = Compiler for Linux;
   sw_compiler003   = Fortran: Version 18.0.2.199 of Intel Fortran
   sw_compiler004   = Compiler for Linux
   sw_base_ptrsize  = 64-bit
   sw_peak_ptrsize  = Not Applicable

#--------- EDIT Your info ---------------------------------------------------------
# To understand the difference between hw_vendor/sponsor/tester, see:
#     www.spec.org/cpu2017/Docs/config.html#test_sponsor
intrate,intspeed,fprate,fpspeed: # Important: keep this line
   hw_vendor          = My Corporation
   tester             = My Corporation
   test_sponsor       = My Corporation
   license_num        = 13
   prepared_by        = My Corporation

#--------- EDIT system availability dates and system information ----------------------------------------------
intrate,intspeed,fprate,fpspeed: # Important: keep this line
                        # Example                             # Brief info about field
   hw_avail           = # Nov-2099                            # Date of LAST hardware component to ship
   sw_avail           = # Nov-2099                            # Date of LAST software component to ship
   hw_cpu_nominal_mhz = # 9999                                # Nominal chip frequency, in MHz
   hw_cpu_max_mhz     = # 9999                                # Max chip frequency, in MHz
   hw_ncores          = # 9999                                # number cores enabled
   hw_nthreadspercore = # 9                                   # number threads enabled per core
   hw_ncpuorder       = # 1-9 chips                           # Ordering options

   hw_model           = # TurboBlaster 3000                   # system model name
   hw_other           = # TurboNUMA Router 10 Gb              # Other perf-relevant hw, or "None"
#   sw_other           = # TurboHeap Library V8.1              # Other perf-relevant sw, or "None"

   hw_pcache          = # 99 KB I + 99 KB D on chip per core  # Primary cache size, type, location
   hw_scache          = # 99 KB I+D on chip per 9 cores       # Second cache or "None"
   hw_tcache          = # 9 MB I+D on chip per chip           # Third  cache or "None"
   hw_ocache          = # 9 GB I+D off chip per system board  # Other cache or "None"

#   hw_memory001       = # 4 TB (256 x 16 GB 2Rx4 PC4-2133P-R, # N GB (M x N GB nRxn
#   hw_memory002       = # running at 1600 MHz)                # PCn-nnnnnR-n[, ECC and other info])


#--------- Sysinfo fields - You may need to adjust this section ---------------
# Note: Some commented-out fields above are automatically set to preliminary
# values by sysinfo
#       www.spec.org/cpu2017/Docs/config.html#sysinfo
# Uncomment lines for which you already have a better answer than sysinfo
#
intrate,intspeed,fprate,fpspeed: # Important: keep this line
                        # Example               # Brief info about field
 # hw_cpu_name        = # Intel Xeon E9-9999 v9               # chip name
 # hw_disk            = # 9 x 9 TB SATA III 9999 RPM          # Size, type, other perf-relevant info
 # hw_nchips          = # 99                                  # number chips enabled
 # sw_file            = # ext99                               # File system
 # sw_state           = # Run level 99                        # Software state.

 # sw_os001           = # Linux Sailboat                      # Operating system
 # sw_os002           = # Distribution 7.2 SP1                # and version
