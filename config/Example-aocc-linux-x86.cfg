#---------------------------------------------------------------------------------------
# SPEC CPU(R) 2017 config file for: AMD Optimizing C/C++ Compiler (AOCC) on Linux x86_64
#---------------------------------------------------------------------------------------
#
# Usage: (1) Copy this to a new name
#             cd $SPEC/config
#             cp Example-x.cfg myname.cfg
#        (2) Change items that are marked 'EDIT' (search for it)
#
# SPEC tested this config file with:
#    Compiler version(s):    1.3.0, 2.0.0
#    Operating system(s):    Oracle Linux 7.6 / Red Hat Enterprise Linux 7.6
#                            Ubuntu 19.04 (Disco Dingo)
#    Hardware:               AMD EPYC
#
# If your system differs, this config file might not work.
# You might find a better config file at http://www.spec.org/cpu2017/results
#
# Compiler issues: Contact your compiler vendor, not SPEC.
# For SPEC help:   http://www.spec.org/cpu2017/Docs/techsupport.html
#------------------------------------------------------------------------------

%ifndef %{aocc_version}       # EDIT to select the version of AOCC to use.  Or,
% define aocc_version 2.0.0   #      you can set it on the command line using:
%endif                        #      'runcpu --define aocc_version=x.y.z'


#--------- Preprocessor -------------------------------------------------------
%ifndef %{build_ncpus}         # EDIT to adjust number of simultaneous compiles.
%   define  build_ncpus 8      #      Or, you can set it on the command line:
%endif                         #      'runcpu --define build_ncpus=nn'


#--------- Label --------------------------------------------------------------
# Arbitrary string to tag binaries (no spaces allowed)
#     Two suggestions: # (1) EDIT this label as you try new ideas.
%define label "mytest" # (2)      Use a label meaningful to *you*.


# Don't change this part.
%define model  -m64


#--------- Global Settings ----------------------------------------------------
# For info, see:
#            https://www.spec.org/cpu2017/Docs/config.html#fieldname
#   Example: https://www.spec.org/cpu2017/Docs/config.html#tune

command_add_redirect = 1
flagsurl             = $[top]/config/flags/aocc.xml
iterations           = 1
label                = %{label}-%{aocc_version}%{model}
line_width           = 1020
log_line_width       = 1020
makeflags            = --jobs=%{build_ncpus}
output_format        = txt,html,cfg,pdf,csv
preenv               = 1
reportable           = 0
tune                 = base


#--------- How Many CPUs? -----------------------------------------------------
# Both SPECrate and SPECspeed can test multiple chips / cores / hw threads
#    - For SPECrate,  you set the number of copies.
#    - For SPECspeed, you set the number of threads.
# See: https://www.spec.org/cpu2017/Docs/system-requirements.html#MultipleCPUs
#
#    q. How many should I set?
#    a. Unknown, you will have to try it and see!
#
# To get you started, some suggestions:
#
#     copies - This config file defaults to testing only 1 copy.   You might
#              try changing it to match the number of cores on your system,
#              or perhaps the number of virtual CPUs as reported by:
#                     grep -c processor /proc/cpuinfo
#              Be sure you have enough memory.  See:
#              https://www.spec.org/cpu2017/Docs/system-requirements.html#memory
#
#     threads - This config file sets a starting point.  You could try raising
#               it.  A higher thread count is much more likely to be useful for
#               fpspeed than for intspeed.
#
intrate,fprate:
   copies           = 1  # EDIT to change number of copies (see above)
intspeed,fpspeed:
   threads          = 16   # EDIT to change number of OpenMP threads (see above)


#------- Compilers ------------------------------------------------------------
default:
#  EDIT: The parent directory for your compiler.
#        Do not include the trailing /bin/
#        Do not include a trailing slash
#  Examples:
#   1  On an Ubuntu system, you said
#      'dpkg -i aocc-compiler-2.0.0_1_amd64.deb'
#      Use:                 %   define aocc_dir "/opt/AMD/aocc-compiler-%{aocc_version}"
#   2  You unpacked AOCC-1.3.0-Compiler.tar into /data1/aocc/AOCC-1.3.0-Compiler/
#      Use:                 %   define aocc_dir "/data1/aocc/AOCC-1.3.0-Compiler"
#
%ifndef %{aocc_dir}
%   define  aocc_dir        "/opt/AMD/aocc-compiler-%{aocc_version}" # EDIT (see above)
%endif

# EDIT if needed: the preENV line adds library directories to the runtime
#      path.  You can adjust it, or add lines for other environment variables.
#      See: https://www.spec.org/cpu2017/Docs/config.html#preenv
   preENV_LD_LIBRARY_PATH  = %{aocc_dir}/lib:/lib64:%{ENV_LD_LIBRARY_PATH}
   SPECLANG                = %{aocc_dir}/bin/
   CC                      = $(SPECLANG)clang     -std=c99   %{model}
   CXX                     = $(SPECLANG)clang++   -std=c++03 %{model}
   FC                      = $(SPECLANG)flang                %{model}
   # How to say "Show me your version, please"
   CC_VERSION_OPTION       = --version
   CXX_VERSION_OPTION      = --version
   FC_VERSION_OPTION       = --version

    EXTRA_FLIBS = -lflang           # Fortran run-time library
    EXTRA_CXXLIBS = -lflang         # ...and for mixed-language benchmarks with C++ and Fortran

default:
   sw_base_ptrsize = 64-bit
   sw_peak_ptrsize = Not Applicable


#--------- Portability --------------------------------------------------------
default:               # data model applies to all benchmarks
    EXTRA_PORTABILITY = -DSPEC_LP64

# Benchmark-specific portability (ordered by last 2 digits of bmark number)

500.perlbench_r,600.perlbench_s:        # lang='C'
   PORTABILITY    = -DSPEC_LINUX_X64

521.wrf_r,621.wrf_s:                    # lang='F,C'
   CPORTABILITY   = -DSPEC_CASE_FLAG
   FPORTABILITY   = -Mbyteswapio

523.xalancbmk_r,623.xalancbmk_s:        # lang='CXX'
   PORTABILITY    = -DSPEC_LINUX

526.blender_r:                          # lang='CXX,C'
   PORTABILITY    = -funsigned-char -DSPEC_LINUX
   CXXPORTABILITY = -D__BOOL_DEFINED

527.cam4_r,627.cam4_s:                  # lang='F,C'
   PORTABILITY    = -DSPEC_CASE_FLAG

628.pop2_s:                             # lang='F,C'
   CPORTABILITY   = -DSPEC_CASE_FLAG
   FPORTABILITY   = -Mbyteswapio


#-------- Tuning Flags common to Base and Peak --------------------------------

#
# Speed (OpenMP and Autopar allowed)
#
intspeed,fpspeed:
    EXTRA_OPTIMIZE = -fopenmp -DSPEC_OPENMP
fpspeed:
    #
    # 627.cam4 needs a big stack; the preENV will apply it to all
    # benchmarks in the set, as required by the rules.
    #
    # It also wants a very large normal stack; it will be necessary
    # to say
    #
    #   ulimit -s unlimited
    #
    # in the shell before starting runcpu.
    #
    preENV_OMP_STACKSIZE = 120M


#--------  Baseline Tuning Flags ----------------------------------------------
#
# EDIT if needed -- See comments in "default=peak:" section below.
#
default=base:       # flags for all base
   COPTIMIZE      = -g -O3 -ffast-math -march=native -flto=thin
   CXXOPTIMIZE    = -g -O3 -ffast-math -march=native -flto=thin
   FOPTIMIZE      = -g -O3             -march=native -flto=thin -Kieee -fno-finite-math-only

intrate,intspeed=base: # flags for integer base
   EXTRA_COPTIMIZE = -fgnu89-inline
# Notes about the above
#  - 502.gcc_r/602.gcc_s             needs -fgnu89-inline or -z muldefs
#  - For 'base', all benchmarks in a set must use the same options.
#  - Therefore, all base benchmarks get the above.  See:
#       www.spec.org/cpu2017/Docs/runrules.html#BaseFlags
#       www.spec.org/cpu2017/Docs/benchmarks/502.gcc_r.html


#--------  Peak Tuning Flags ----------------------------------------------
default:           # If you develop some peak tuning, remove these two lines
   basepeak = yes  # and put your tuning in the default=peak: section below.
default=peak:
   #
   # For 'base', this config file (conservatively) does not include some
   # optimizations.
   # You might want to try adding some, by creating a 'peak' section here,
   # with individualized benchmark options:
   #
   #        500.perlbench_r=peak:
   #           OPTIMIZE = this
   #        502.gcc_r=peak:
   #           OPTIMIZE = that
   #        503.bwaves_r=peak:
   #           OPTIMIZE = other   .....(and so forth)
   #
   # If you try it:
   #   - You must remove the 'basepeak' option, above.
   #   - You will need time and patience, to diagnose and avoid any errors.
   #   - Some floating point benchmarks may get wrong answers, depending on:
   #         the particular chip
   #         the version of the compiler
   #         other optimizations enabled
   #   - See: http://www.spec.org/cpu2017/Docs/config.html
   #   - and: http://www.spec.org/cpu2017/Docs/runrules.html


#------------------------------------------------------------------------------
# Tester and System Descriptions - EDIT all sections below this point
#------------------------------------------------------------------------------
#   For info about any field, see
#             https://www.spec.org/cpu2017/Docs/config.html#fieldname
#   Example:  https://www.spec.org/cpu2017/Docs/config.html#hw_memory
#-------------------------------------------------------------------------------

#--------- EDIT to match your version -----------------------------------------
default:
   sw_compiler001   = C/C++/Fortran: Version %{aocc_version} of AOCC, the
   sw_compiler002   = AMD Optimizing C/C++ Compiler

#--------- EDIT info about you ------------------------------------------------
# To understand the difference between hw_vendor/sponsor/tester, see:
#     https://www.spec.org/cpu2017/Docs/config.html#test_sponsor
intrate,intspeed,fprate,fpspeed: # Important: keep this line
   hw_vendor          = My Corporation
   tester             = My Corporation
   test_sponsor       = My Corporation
   license_num        = nnn (Your SPEC license number)
#  prepared_by        = # Ima Pseudonym                       # Whatever you like: is never output


#--------- EDIT system availability dates -------------------------------------
intrate,intspeed,fprate,fpspeed: # Important: keep this line
                        # Example                             # Brief info about field
   hw_avail           = # Nov-2099                            # Date of LAST hardware component to ship
   sw_avail           = # Nov-2099                            # Date of LAST software component to ship

#--------- EDIT system information --------------------------------------------
intrate,intspeed,fprate,fpspeed: # Important: keep this line
                        # Example                             # Brief info about field
#  hw_cpu_name        = # AMD EPYC 999                        # chip name
   hw_cpu_nominal_mhz = # 9999                                # Nominal chip frequency, in MHz
   hw_cpu_max_mhz     = # 9999                                # Max chip frequency, in MHz
#  hw_disk            = # 9 x 9 TB NVMe SSD                   # Size, type, other perf-relevant info
   hw_model           = # TurboBlaster 9000                   # system model name
#  hw_nchips          = # 99                                  # number chips enabled
   hw_ncores          = # 9999                                # number cores enabled
   hw_ncpuorder       = # 1-9 chips                           # Ordering options
   hw_nthreadspercore = # 9                                   # number threads enabled per core
   hw_other           = # TurboNUMA Router 10 Gb              # Other perf-relevant hw, or "None"

#  hw_memory001       = # 999 GB (99 x 9 GB 2Rx4 PC4-2133P-R, # The 'PCn-etc' is from the JEDEC
#  hw_memory002       = # running at 1600 MHz)                # label on the DIMM.

   hw_pcache          = # 99 KB I + 99 KB D on chip per core  # Primary cache size, type, location
   hw_scache          = # 99 KB I+D on chip per 9 cores       # Second cache or "None"
   hw_tcache          = # 9 MB I+D on chip per chip           # Third  cache or "None"
   hw_ocache          = # 9 GB I+D off chip per system board  # Other cache or "None"

   fw_bios            = # American Megatrends 39030100 02/29/2016 # Firmware information
#  sw_file            = # ext99                               # File system
#  sw_os001           = # Linux Sailboat                      # Operating system
#  sw_os002           = # Distribution 7.2 SP1                # and version
   sw_other           = # TurboHeap Library V8.1              # Other perf-relevant sw, or "None"
#  sw_state           = # Run level 99                        # Software state.

# Note: Some commented-out fields above are automatically set to preliminary
# values by sysinfo
#       https://www.spec.org/cpu2017/Docs/config.html#sysinfo
# Uncomment lines for which you already know a better answer than sysinfo

