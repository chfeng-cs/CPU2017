#------------------------------------------------------------------------------
# SPEC CPU(R) 2017 config file for: Oracle Developer Studio on Solaris
#------------------------------------------------------------------------------
# 
# Usage: (1) Copy this to a new name
#             cd $SPEC/config
#             cp Example-x.cfg myname.cfg
#        (2) Change items that are marked 'EDIT' (search for it)
# 
# SPEC tested this config file with:
#    Compiler version(s):    Oracle Developer Studio 12.6 
#    C++ Library:            stlport4, Apache C++, or the GNU library
#    Operating system(s):    Solaris 11 
#                            (For Solaris 10, see comment at 526.blender)
#    Hardware:               sparc and x86 
#
# Known issues:
# 
#    507.cactuBSSN_r and     This file is set correctly for Studio 12.6.
#    607.cactuBSSN_s         If you use 12.5, you will need to adjust:
#                            see the comments in the portability section.
#
#    526.blender_r           For older Solaris 10, needs an extra flag.  
#                            See the comments in the portability section.
#
# If your system differs, this config file might not work.
# You might find a better config file at http://www.spec.org/cpu2017/results
#
# Compiler issues: Contact your compiler vendor, not SPEC.
# For SPEC help:   http://www.spec.org/cpu2017/Docs/techsupport.html
#------------------------------------------------------------------------------


#--------- Label --------------------------------------------------------------
# Arbitrary string to tag binaries (no spaces allowed)
#                  Two Suggestions: # (1) EDIT this label as you try new ideas.
%define label "mytest"              # (2)      Use a label meaningful to *you*.


# Don't change this part
%if %{label} =~ m/ /
%   error Your label "%{label}" contains spaces.  Please try underscores instead.
%endif
%if %{label} !~ m/^[a-zA-Z0-9._-]+$/
%   error Illegal character in label "%{label}".  Please use only alphanumerics, underscore, hyphen, and period.
%endif

#--------- Preprocessor -------------------------------------------------------
%ifndef %{bits}                # EDIT to control 32 or 64 bit compilation.  Or, 
%   define  bits        64     #      you can set it on the command line using:
%endif                         #      'runcpu --define bits=nn'

%ifndef %{build_ncpus}         # EDIT to adjust number of simultaneous compiles.
%   define  build_ncpus 16     #      Or, you can set it on the command line: 
%endif                         #      'runcpu --define build_ncpus=nn'

%ifndef %{lib}                 # Optionally EDIT or use runcpu --define 
%   define lib   gnu2003       # Set to 'stlport4', 'stdcxx4', or 'gnu2003'
%endif

%ifndef %{chip}                # You probably do not need to edit this part: it
%   if %{endian} =~ "1234"     # guesses the chip based on word order (endian). 
%      define chip x86     
%   else
%      define chip sparc
%   endif
%endif

# You definitely should NOT edit the rest of this section
%if %{bits} == 64
%   define model -m64
%elif %{bits} == 32
%   define model -m32
%else
%   error Please define number of bits - see instructions in config file
%endif
%if %{chip} ne "x86" && %{chip} ne "sparc"
%   error Please define the chip type - see instructions in config file.
%endif
%if %{lib} eq "stlport4" 
%   define stdlib -std=sun03 -library=stlport4
%elif %{lib} eq "stdcxx4" 
%   define stdlib -std=sun03 -library=stdcxx4 -template=extdef
%elif %{lib} eq "gnu2003" 
%   define stdlib -std=c++03
%else
%   error Please define 'lib' - see instructions in config file
%endif

#--------- Global Settings ----------------------------------------------------
# For info, see:
#            https://www.spec.org/cpu2017/Docs/config.html#fieldname   
#   Example: https://www.spec.org/cpu2017/Docs/config.html#tune        

flagsurl             = $[top]/config/flags/Oracle-Developer-Studio-12.6.xml
ignore_errors        = 1
iterations           = 1
label                = %{label}-%{lib}%{model}
line_width           = 1020
log_line_width       = 1020
makeflags            = --jobs=%{build_ncpus} 
mean_anyway          = 1
output_format        = txt,html,cfg,pdf,csv
preenv               = 1
tune                 = base


#--------- How Many CPUs? -----------------------------------------------------
# Both SPECrate and SPECspeed can test multiple chips / cores / hw threads
#    - For SPECrate,  you set the number of copies.
#    - For SPECspeed, you set the number of threads. 
# See: https://www.spec.org/cpu2017/Docs/system-requirements.html#MultipleCPUs
#
#    q. How many should I set?  
#    a. Unknown, you will have to try it and see!
#
# To get you started, some suggestions:
#
#     copies - This config file defaults to testing only 1 copy.   You might
#              try changing it after examining your system with:
#                     psrinfo -pv
#              For exmaple, if your system has 8 "virtual processors" (aka
#              hardware threads) per core, you might try setting the number 
#              of copies to somewhere between 4 and 8 per core, depending on
#              how much memory is available to applications.  See: 
#              https://www.spec.org/cpu2017/Docs/system-requirements.html#memory
#              and in the Solaris Tunables Guide, see topics: 
#                 'user_reserve_hint_pct' or 'zfs_arc_max'
#              http://docs.oracle.com/en/operating-systems/solaris.html
#
#     threads - This config file sets a starting point.  You could try raising 
#               it.  A higher thread count is much more likely to be useful for
#               fpspeed than for intspeed.
#
intrate,fprate:
   copies           = 1   # EDIT to change number of copies (see above)
intspeed,fpspeed:
   threads          = 4   # EDIT to change number of OpenMP threads (see above)


#--------- Compilers ----------------------------------------------------------
default:
#                 # EDIT if needed: the directory where your compiler is installed
   SPECLANG     = /opt/developerstudio12.6/bin
   CC           = $(SPECLANG)/cc   -xjobs=8 %{model} -errfmt
   CXX          = $(SPECLANG)/CC   -xjobs=8 %{model} 
   FC           = $(SPECLANG)/f95  -xjobs=8 %{model} 
   # How to say "Show me your version, please"
   CC_VERSION_OPTION       = -V
   CXX_VERSION_OPTION      = -V
   FC_VERSION_OPTION       = -V

default:
%if %{bits} == 64
   sw_base_ptrsize = 64-bit
   sw_peak_ptrsize = Not Applicable
%else
   sw_base_ptrsize = 32-bit
   sw_peak_ptrsize = Not Applicable
%endif


#--------- Portability --------------------------------------------------------
default:   # data model applies to all benchmarks
%if %{bits} == 32
    # Strongly recommended because at run-time, operations using modern file 
    # systems may fail spectacularly and frequently (or, worse, quietly and 
    # randomly) if a program does not accommodate 64-bit metadata.
    EXTRA_PORTABILITY = -D_FILE_OFFSET_BITS=64    
%else
    EXTRA_PORTABILITY = -DSPEC_LP64
%endif

# Benchmark-specific portability (ordered by last 2 digits of bmark number)

500.perlbench_r,600.perlbench_s: 
%if %{chip} eq "sparc"  
    PORTABILITY       = -DSPEC_SOLARIS_SPARC
%else 
%   if %{bits} == 32
       PORTABILITY    = -DSPEC_SOLARIS_IA32
%   else
       PORTABILITY    = -DSPEC_SOLARIS_X64
%   endif
%endif

507.cactuBSSN_r,607.cactuBSSN_s:  
%if %{lib} eq "stlport4" or %{lib} eq "stdcxx4"     # Studio 12.6 
   PORTABILITY        = -DSPEC_NO_C99_MATH_IN_CXX   # Studio 12.6
%endif                                              # Studio 12.6
# For Oracle Developer Studio 12.5, remove the above 3 lines and
# uncomment the following line, because with 12.5, the flag 
# is *always* needed.
#  PORTABILITY        = -DSPEC_NO_C99_MATH_IN_CXX    

510.parest_r:  
%if %{lib} eq "stlport4" or %{lib} eq "stdcxx4"
%   if %{chip} eq "sparc" or (%{chip} eq "x86" and %{bits} == 32)
       PORTABILITY    = -qoption ccfe -abiopt=mangle6
%   endif
%endif

520.omnetpp_r,620.omnetpp_s:  #lang='CXX'
%if %{lib} =~ "gnu"
    PORTABILITY       = -DSPEC_GCC_MANGLE
%endif

521.wrf_r,621.wrf_s:  #lang='F,C'
%if %{chip} eq "x86" 
    FPORTABILITY      = -xfilebyteorder=big8:%all
%endif

523.xalancbmk_r,623.xalancbmk_s:  #lang='CXX'
    PORTABILITY       = -DSPEC_SOLARIS

526.blender_r:  #lang='CXX,C'
    PORTABILITY       = -xchar=u -DSPEC_NO_ISFINITE 
# For SOLARIS 10 prior to s10u11 - add -DSPEC_NO_MKDTEMP

628.pop2_s:  #lang='F,C'
%if %{chip} eq "x86"
   PORTABILITY        = -xfilebyteorder=big8:%all 
%endif




#--------  Baseline Tuning Flags ----------------------------------------------
#
default=base:         # flags for all base 
   OPTIMIZE          = -g -fast 
   EXTRA_CXXOPTIMIZE = %{stdlib}   # Template library

#
# Speed (OpenMP and Autopar allowed)
#
%if %{bits} == 32
   intspeed,fpspeed=base:  # for speed base
   #
   # Many of the speed benchmarks (6nn.benchmark_s) do not fit in 32 bits
   # If you wish to run SPECint2017_speed or SPECfp2017_speed, please use
   #
   #     runcpu --define bits=64
   #
   fail_build = 1
%else
   intspeed,fpspeed=base:  # for speed base
      EXTRA_OPTIMIZE = -fopenmp -DSPEC_OPENMP
   fpspeed:
      #
      # 627.cam4 needs a big stack; the preENV will apply it to all 
      # benchmarks in the set, as required by the rules.  
      #
      preENV_OMP_STACKSIZE = 120M
%endif


#--------  Peak Tuning Flags ----------------------------------------------
default:           # If you develop some peak tuning, remove these two lines
   basepeak = yes  # and put your tuning in the default=peak: section below.
default=peak:


#------------------------------------------------------------------------------
# Tester and System Descriptions - EDIT all sections below this point              
#------------------------------------------------------------------------------
#   For info about any field, see
#             https://www.spec.org/cpu2017/Docs/config.html#fieldname 
#   Example:  https://www.spec.org/cpu2017/Docs/config.html#hw_memory  
#-------------------------------------------------------------------------------

#--------- EDIT to match your version -----------------------------------------
default:
   sw_compiler001   = C/C++/Fortran: Version 12.6 of
   sw_compiler002   = Oracle Developer Studio 

#--------- EDIT info about you ------------------------------------------------
# To understand the difference between hw_vendor/sponsor/tester, see:
#     https://www.spec.org/cpu2017/Docs/config.html#test_sponsor
intrate,intspeed,fprate,fpspeed: # Important: keep this line
   hw_vendor          = My Corporation
   tester             = My Corporation
   test_sponsor       = My Corporation
   license_num        = nnn (Your SPEC license number) 
#  prepared_by        = # Ima Pseudonym                       # Whatever you like: is never output


#--------- EDIT system availability dates -------------------------------------
intrate,intspeed,fprate,fpspeed: # Important: keep this line
                        # Example                             # Brief info about field
   hw_avail           = # Nov-2099                            # Date of LAST hardware component to ship
   sw_avail           = # Nov-2099                            # Date of LAST software component to ship

#--------- EDIT system information --------------------------------------------
intrate,intspeed,fprate,fpspeed: # Important: keep this line
                        # Example                             # Brief info about field
#  hw_cpu_name        = # Intel Xeon E9-9999 v9               # chip name
#  hw_cpu_nominal_mhz = # 9999                                # Nominal chip frequency, in MHz
   hw_cpu_max_mhz     = # 9999                                # Max chip frequency, in MHz
   hw_disk            = # 9 x 9 TB SATA III 9999 RPM          # Size, type, other perf-relevant info
   hw_model           = # TurboBlaster 3000                   # system model name
#  hw_nchips          = # 99                                  # number chips enabled
#  hw_ncores          = # 9999                                # number cores enabled
   hw_ncpuorder       = # 1-9 chips                           # Ordering options  
#  hw_nthreadspercore = # 9                                   # number threads enabled per core
   hw_other           = # TurboNUMA Router 10 Gb              # Other perf-relevant hw, or "None"

#  hw_memory001       = # 4 TB (256 x 16 GB 2Rx4 PC4-2133P-R, # N GB (M x N GB nRxn 
#  hw_memory002       = # running at 1600 MHz)                # PCn-nnnnnR-n[, ECC and other info])

   hw_pcache          = # 99 KB I + 99 KB D on chip per core  # Primary cache size, type, location  
   hw_scache          = # 99 KB I+D on chip per 9 cores       # Second cache or "None" 
   hw_tcache          = # 9 MB I+D on chip per chip           # Third  cache or "None" 
   hw_ocache          = # 9 GB I+D off chip per system board  # Other cache or "None" 

   sw_file            = # zfs                                 # File system  
#  sw_os001           = # Solaris 99.9                        # Operating system
#  sw_os002           = # with SRU 99.9                       # and version 
   sw_other           = # TurboHeap Library V8.1              # Other perf-relevant sw, or "None"
   sw_state           = # Run level 99                        # Software state.  

# Note: Some commented-out fields above are automatically set to preliminary 
# values by sysinfo
#       www.spec.org/cpu2017/Docs/config.html#sysinfo
# Uncomment lines for which you already know a better answer than sysinfo 
